### 设置###
log=D:/logs/society
log4j.rootLogger = DEBUG,STDOUT,DEBUGLOG,WARNLOG

### 输出信息到控制抬 ###
log4j.appender.STDOUT = org.apache.log4j.ConsoleAppender
log4j.appender.STDOUT.Target = System.out
log4j.appender.STDOUT.Threshold = INFO
log4j.appender.STDOUT.layout = org.apache.log4j.PatternLayout
log4j.appender.STDOUT.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss} [%-5p] %l - %m%n

### 输出DEBUG 级别以上的日志到=${log}/debug.log ###
log4j.appender.DEBUGLOG = org.apache.log4j.DailyRollingFileAppender
log4j.appender.DEBUGLOG.File = ${log}/debug-
### 后缀可为.txt/.log/.html等等 ###
log4j.appender.DEBUGLOG.DatePattern=yyyy-MM-dd'.log'
log4j.appender.DEBUGLOG.Append = true
log4j.appender.DEBUGLOG.Threshold = DEBUG
log4j.appender.DEBUGLOG.layout = org.apache.log4j.PatternLayout
log4j.appender.DDEBUGLOG.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss} [%-5p] %l - %m%n

### 输出ERROR 级别以上的日志到=${log}/error.log ###
log4j.appender.WARNLOG = org.apache.log4j.DailyRollingFileAppender
log4j.appender.WARNLOG.File =${log}/warn-
log4j.appender.WARNLOG.DatePattern=yyyy-MM-dd'.log'
log4j.appender.WARNLOG.Append = true
log4j.appender.WARNLOG.Threshold = WARN
log4j.appender.WARNLOG.layout = org.apache.log4j.PatternLayout
log4j.appender.WARNLOG.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss} [%-5p] %l - %m%n

###显示SQL语句部分
log4j.logger.com.ibatis=DEBUG
log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=DEBUG
log4j.logger.com.ibatis.common.jdbc.ScriptRunner=DEBUG
log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG
log4j.logger.Java.sql.Connection=DEBUG
log4j.logger.java.sql.Statement=DEBUG
log4j.logger.java.sql.PreparedStatement=DEBUG

### 输出ERROR 级别以上的日志到=${log}/error.log ###
#log4j.appender.DATABASE = org.apache.log4j.jdbc.JDBCAppender
#log4j.appender.DATABASE.URL = jdbc:sqlserver://localhost:1433;DatabaseName=NewZhangJiang
#log4j.appender.DATABASE.driver = com.microsoft.sqlserver.jdbc.SQLServerDriver
#log4j.appender.DATABASE.user = sa
#log4j.appender.DATABASE.password = Gaozhi283
#log4j.appender.DATABASE.sql = INSERT INTO A1 (TITLE3) VALUES ( ' %d - %c %-5p %c %x - %m%n ' )
#log4j.appender.DATABASE.Threshold = WARN
#log4j.appender.DATABASE.layout = org.apache.log4j.PatternLayout
#log4j.appender.DATABASE.layout.ConversionPattern =% d -   % c -%- 4r [ % t] %- 5p % c % x -   % m % n
#%m 输出代码中指定的消息
#%p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL
#%r 输出自应用启动到输出该log信息耗费的毫秒数
#%c 输出所属的类目，通常就是所在类的全名
#%t 输出产生该日志事件的线程名
#%n 输出一个回车换行符，Windows平台为"rn”，Unix平台为"n”
#%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyyy MM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921 %l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。
#%x: 输出和当前线程相关联的NDC(嵌套诊断环境),尤其用到像java servlets这样的多客户多线程的应用中。
#%%: 输出一个”%”字符
#%F: 输出日志消息产生时所在的文件名称
#%M: 输出执行方法
#%L: 输出代码中的行号